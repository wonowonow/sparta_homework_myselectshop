<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.sparta.myselectshop.mvc.UserProductMvcTest" tests="3" skipped="0" failures="0" errors="0" timestamp="2023-11-29T07:22:13" hostname="DESKTOP-KE7H06M" time="1.034">
  <properties/>
  <testcase name="로그인 Page" classname="com.sparta.myselectshop.mvc.UserProductMvcTest" time="0.587"/>
  <testcase name="회원 가입 요청 처리" classname="com.sparta.myselectshop.mvc.UserProductMvcTest" time="0.275"/>
  <testcase name="신규 관심상품 등록" classname="com.sparta.myselectshop.mvc.UserProductMvcTest" time="0.16"/>
  <system-out><![CDATA[16:22:08.848 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.sparta.myselectshop.mvc.UserProductMvcTest]: UserProductMvcTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
16:22:09.042 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.sparta.myselectshop.MyselectshopApplication for test class com.sparta.myselectshop.mvc.UserProductMvcTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.5)

2023-11-29T16:22:09.629+09:00  WARN 10972 --- [    Test worker] ory$DuplicateJsonObjectContextCustomizer : 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/C:/Users/Wono/.gradle/caches/modules-2/files-2.1/org.json/json/20230227/7a0d4aca76513d8ce81f9b044ce8126b84809ad8/json-20230227.jar!/org/json/JSONObject.class
	jar:file:/C:/Users/Wono/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2023-11-29T16:22:09.648+09:00  INFO 10972 --- [    Test worker] c.s.myselectshop.mvc.UserProductMvcTest  : Starting UserProductMvcTest using Java 17.0.8.1 with PID 10972 (started by Wono in D:\Programing\Spring\Sparta\week4\myselectshop)
2023-11-29T16:22:09.649+09:00  INFO 10972 --- [    Test worker] c.s.myselectshop.mvc.UserProductMvcTest  : No active profile set, falling back to 1 default profile: "default"
2023-11-29T16:22:12.846+09:00  INFO 10972 --- [    Test worker] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2023-11-29T16:22:13.159+09:00  WARN 10972 --- [    Test worker] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: fb1f21fd-7a0c-46b2-9c3e-43bbce0107da

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2023-11-29T16:22:13.405+09:00  INFO 10972 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@abc7005, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@595ec862, org.springframework.security.web.context.SecurityContextHolderFilter@23ec2bdc, org.springframework.security.web.header.HeaderWriterFilter@448086ab, org.springframework.security.web.csrf.CsrfFilter@284c4f02, org.springframework.security.web.authentication.logout.LogoutFilter@fd87c22, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4ca0b9b1, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@6591f8ea, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@63c84d31, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@69ba72da, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3d132bb6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2fa212df, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@102af1bb, org.springframework.security.web.access.ExceptionTranslationFilter@2ffa91dc, org.springframework.security.web.access.intercept.AuthorizationFilter@7e1a9173]
2023-11-29T16:22:13.499+09:00  INFO 10972 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-11-29T16:22:13.500+09:00  INFO 10972 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-11-29T16:22:13.502+09:00  INFO 10972 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2023-11-29T16:22:13.570+09:00  INFO 10972 --- [    Test worker] c.s.myselectshop.mvc.UserProductMvcTest  : Started UserProductMvcTest in 4.414 seconds (process running for 6.289)
2023-11-29T16:22:13.621+09:00  INFO 10972 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-11-29T16:22:13.621+09:00  INFO 10972 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-11-29T16:22:13.622+09:00  INFO 10972 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/user/login-page
       Parameters = {}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.sparta.myselectshop.controller.UserController
           Method = com.sparta.myselectshop.controller.UserController#loginPage()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = login
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta charset="UTF-8">
  <meta name="viewport"
        content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <link rel="preconnect" href="https://fonts.gstatic.com">
  <link rel="stylesheet" type="text/css" href="/css/style.css">
  <script src="https://code.jquery.com/jquery-3.7.0.min.js"
          integrity="sha256-2Pmvv0kuTBOenSvLm6bvfBSSHrUJ+3A7x6P5Ebd07/g=" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/js-cookie@3.0.5/dist/js.cookie.min.js"></script>
  <meta charset="UTF-8">
  <title>로그인 페이지</title>
</head>
<body>
<div id="login-form">
  <div id="login-title">Log into Select Shop</div>
  <button id="login-kakao-btn" onclick="location.href='https://kauth.kakao.com/oauth/authorize?client_id=abb034249c55acd172b2c0627c2c9043&redirect_uri=http://localhost:8080/api/user/kakao/callback&response_type=code'">
    카카오로 로그인하기
  </button>
  <button id="login-id-btn" onclick="location.href='/api/user/signup'">
    회원 가입하기
  </button>
  <div>
    <div class="login-id-label">아이디</div>
    <input type="text" name="username" id="username" class="login-input-box">

    <div class="login-id-label">비밀번호</div>
    <input type="password" name="password" id="password" class="login-input-box">

    <button id="login-id-submit" onclick="onLogin()">로그인</button>
  </div>
  <div id="login-failed" style="display:none" class="alert alert-danger" role="alert">로그인에 실패하였습니다.</div>
</div>
</body>
<script>
  $(document).ready(function () {
    // 토큰 삭제
    Cookies.remove('Authorization', {path: '/'});
  });

  const href = location.href;
  const queryString = href.substring(href.indexOf("?") + 1)
  if (queryString === 'error') {
    const errorDiv = document.getElementById('login-failed');
    errorDiv.style.display = 'block';
  }

  const host = 'http://' + window.location.host;

  function onLogin() {
    let username = $('#username').val();
    let password = $('#password').val();

    $.ajax({
      type: "POST",
      url: `/api/user/login`,
      contentType: "application/json",
      data: JSON.stringify({username: username, password: password}),
    })
    .done(function (res, status, xhr) {
      const token = xhr.getResponseHeader('Authorization');

      Cookies.set('Authorization', token, {path: '/'})

      $.ajaxPrefilter(function (options, originalOptions, jqXHR) {
        jqXHR.setRequestHeader('Authorization', token);
      });

      window.location.href = host;
    })
    .fail(function (jqXHR, textStatus) {
      alert("Login Fail");
      window.location.href = host + '/api/user/login-page?error'
    });
  }
</script>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2023-11-29T16:22:14.192+09:00  INFO 10972 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-11-29T16:22:14.193+09:00  INFO 10972 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-11-29T16:22:14.194+09:00  INFO 10972 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/user/signup
       Parameters = {username=[sollertia4351], password=[robbie1234], email=[sollertia@sparta.com], admin=[false]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.sparta.myselectshop.controller.UserController
           Method = com.sparta.myselectshop.controller.UserController#signup(SignupRequestDto, BindingResult)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = redirect:/api/user/login-page
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 302
    Error message = null
          Headers = [Content-Language:"en", Location:"/api/user/login-page"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = /api/user/login-page
          Cookies = []
2023-11-29T16:22:14.473+09:00  INFO 10972 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-11-29T16:22:14.473+09:00  INFO 10972 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-11-29T16:22:14.476+09:00  INFO 10972 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/products
       Parameters = {}
          Headers = [Content-Type:"application/json", Accept:"application/json", Content-Length:"234"]
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.sparta.myselectshop.controller.ProductController
           Method = com.sparta.myselectshop.controller.ProductController#createProduct(ProductRequestDto, UserDetailsImpl)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = []
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
